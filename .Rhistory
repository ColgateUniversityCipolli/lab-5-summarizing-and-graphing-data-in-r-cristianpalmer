#Step 2 Part 3:
mutate(
out.of.range = (feature < min) |
(feature > max)
) |>
mutate(
unusual = (feature < LF) |
(feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
function(essentia_data_csv, feature)
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
feature <- "essentia_data_csv"
AllenTown_overall_loudness <- essentia_data_allentown_csv[["overall_loudness"]]
function(essentia_data_csv, feature)
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (feature < min) |
(feature > max)
) |>
mutate(
unusual = (feature < LF) |
(feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
for (feature in names(essentia_data_csv)) {
if (is.numeric(essentia_data_csv[[feature]])) {  # Check if the column is numeric
# Call the check_range function for each numeric feature
result <- check_range(essentia_data_csv, essentia_data_allentown_csv, feature)
# Add a column to identify the feature (for easy tracking)
result$feature <- feature
# Append the result to the results list
results_list[[feature]] <- result
}
}
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
artist_grouped
check_range(essentia_data_csv, essentia_data_allentown_csv, "overall_loudness")
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
artist_grouped
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
for (artist in essentia_data_csv) {
check_range
}
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
for (artist in essentia_data_csv) {
result <- check_range
}
result
result
result
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
artist_grouped
}
for (artist in essentia_data_csv) {
result <- check_range(essentia_data_csv, essentia_data_allentown_csv, feature)
}
result
result
#2 Lab Coding Task: Summarize the Data:
library("stringr")
library("jsonlite")
library("tidyverse")
#Step 1:
essentia_data_allentown_csv <- read.csv("data/essentia.data.allentown.csv")
essentia_data_csv <- read.csv("data/essentia.data.csv")
check_range <- function(essentia_data_csv, essentia_data_allentown_csv, feature){
allentown.feature <- essentia_data_allentown_csv[[feature]]
#Step 1 Part 1:
artist_grouped <- essentia_data_csv |>
group_by(artist) |>
#Step 2 Part 2:
summarize(
min = min(overall_loudness),
LF = quantile(get(feature), 0.25) - 1.5*IQR(get(feature)),
UF = quantile(get(feature), 0.75) + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Step 2 Part 3:
mutate(
out.of.range = (allentown.feature < min) |
(allentown.feature > max)
) |>
mutate(
unusual = (allentown.feature < LF) |
(allentown.feature > UF)
) |>
#Step 2 Part 4:
mutate(
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
for (artist in essentia_data_csv) {
result <- check_range(essentia_data_csv, essentia_data_allentown_csv, feature)
}
result
for (artist in essentia_data_csv) {
result <- check_range(essentia_data_csv, essentia_data_allentown_csv, feature)
}
result
